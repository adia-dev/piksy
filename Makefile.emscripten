# Makefile for SDL + Emscripten
# Produces files in web/ directory (index.html, index.js, index.wasm)

CC := emcc
CXX := em++
WEB_DIR := web
EXE := $(WEB_DIR)/index.html
IMGUI_DIR := imgui
SRC_DIR := src

# Find all .cpp files in src directory and add ImGui sources
SOURCES := $(shell find $(SRC_DIR) -type f -name '*.cpp' -not -name '.null-ls*.cpp')
IMGUI_SOURCES := $(IMGUI_DIR)/imgui.cpp $(IMGUI_DIR)/imgui_demo.cpp $(IMGUI_DIR)/imgui_draw.cpp \
                 $(IMGUI_DIR)/imgui_tables.cpp $(IMGUI_DIR)/imgui_widgets.cpp \
                 $(IMGUI_DIR)/backends/imgui_impl_sdl2.cpp $(IMGUI_DIR)/backends/imgui_impl_opengl3.cpp
SOURCES += $(IMGUI_SOURCES)

# Create object file paths based on source files
OBJS := $(patsubst %.cpp, %.o, $(SOURCES))

# Emscripten Flags
CPPFLAGS := -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends -Wall -Wformat -Os
LDFLAGS := -s WASM=1 -s ALLOW_MEMORY_GROWTH=1 -s NO_EXIT_RUNTIME=0 -s ASSERTIONS=1 --shell-file imgui/examples/libs/emscripten/shell_minimal.html
EMS := -s USE_SDL=2 -s DISABLE_EXCEPTION_CATCHING=1

# Conditional File System Embedding
USE_FILE_SYSTEM ?= 0
ifeq ($(USE_FILE_SYSTEM), 0)
	LDFLAGS += -s NO_FILESYSTEM=1
	CPPFLAGS += -DIMGUI_DISABLE_FILE_FUNCTIONS
else
	LDFLAGS += --no-heap-copy --preload-file ../../misc/fonts@/fonts
endif

# Final Build Flags
CPPFLAGS += $(EMS)
LDFLAGS += $(EMS)

##---------------------------------------------------------------------
## Build Rules
##---------------------------------------------------------------------

# Default target
all: $(EXE)
	@echo Build complete for $(EXE)

# Create output directory
$(WEB_DIR):
	mkdir -p $@

# Link executable
$(EXE): $(OBJS) | $(WEB_DIR)
	$(CXX) -o $@ $(OBJS) $(LDFLAGS)

# Compile .cpp to .o
%.o: %.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

# Serve the output directory
serve: clean all
	python3 -m http.server -d $(WEB_DIR)

# Clean up build artifacts
clean:
	rm -rf $(OBJS) $(WEB_DIR)
